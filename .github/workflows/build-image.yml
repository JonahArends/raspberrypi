name: Build and Push Docker Images

on:
  workflow_dispatch:

jobs:
  build-and-push-backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Get repository name in lowercase
        id: lowercase
        run: echo "::set-output name=repo::$(echo ${GITHUB_REPOSITORY,,})"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Packages
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: pguyot/arm-runner-action@v2
        with:
          base_image: raspbian_lite:latest
          commands: |
              apt-get update && apt-get -y upgrade && apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
              docker build --compress --no-cache --file /docker/Dockerfile-backend --tag ghcr.io/${{ steps.lowercase.outputs.repo }}-sensors-backend:latest
              docker push ghcr.io/${{ steps.lowercase.outputs.repo }}-sensors-backend:latest

  build-and-push-frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Get repository name in lowercase
        id: lowercase
        run: echo "::set-output name=repo::$(echo ${GITHUB_REPOSITORY,,})"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Packages
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: pguyot/arm-runner-action@v2
        with:
          base_image: raspbian_lite:latest
          commands: |
              apt-get update && apt-get -y upgrade && apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
              docker build --compress --no-cache --file /docker/Dockerfile-backend --tag ghcr.io/${{ steps.lowercase.outputs.repo }}-sensors-backend:latest
              docker push ghcr.io/${{ steps.lowercase.outputs.repo }}-sensors-backend:latest
